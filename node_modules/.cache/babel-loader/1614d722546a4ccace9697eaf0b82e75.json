{"remainingRequest":"/Users/Daniel/Desktop/Git/covid19-italy-situation-vuejs/node_modules/babel-loader/lib/index.js!/Users/Daniel/Desktop/Git/covid19-italy-situation-vuejs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Daniel/Desktop/Git/covid19-italy-situation-vuejs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Daniel/Desktop/Git/covid19-italy-situation-vuejs/src/components/DailyCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Daniel/Desktop/Git/covid19-italy-situation-vuejs/src/components/DailyCard.vue","mtime":1590747492466},{"path":"/Users/Daniel/Desktop/Git/covid19-italy-situation-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Daniel/Desktop/Git/covid19-italy-situation-vuejs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Daniel/Desktop/Git/covid19-italy-situation-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Daniel/Desktop/Git/covid19-italy-situation-vuejs/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0RhaWx5Q2FyZCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpdGxlOiAnQWdnaW9ybmFtZW50bycsCiAgICAgIHVwZGF0ZTogewogICAgICAgIGRhdGU6IFtdLAogICAgICAgIHRpbWU6IFtdCiAgICAgIH0sCiAgICAgIGluY3JfdmFsdWVzOiB7CiAgICAgICAgaW5mZXR0aTogbnVsbCwKICAgICAgICBndWFyaXRpOiBudWxsLAogICAgICAgIGRlY2VkdXRpOiBudWxsCiAgICAgIH0KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBheGlvcy5nZXQoJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9wY20tZHBjL0NPVklELTE5L21hc3Rlci9kYXRpLWpzb24vZHBjLWNvdmlkMTktaXRhLWFuZGFtZW50by1uYXppb25hbGUuanNvbicpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHZhciBwYXRoID0gcmVzcG9uc2UuZGF0YVtyZXNwb25zZS5kYXRhLmxlbmd0aCAtIDFdOwogICAgICB2YXIgcGF0aF9iZWZvcmUgPSByZXNwb25zZS5kYXRhW3Jlc3BvbnNlLmRhdGEubGVuZ3RoIC0gMl07CiAgICAgIF90aGlzLmluY3JfdmFsdWVzLmluZmV0dGkgPSBwYXRoLm51b3ZpX3Bvc2l0aXZpOwogICAgICBfdGhpcy5pbmNyX3ZhbHVlcy5ndWFyaXRpID0gcGF0aC5kaW1lc3NpX2d1YXJpdGkgLSBwYXRoX2JlZm9yZS5kaW1lc3NpX2d1YXJpdGk7CiAgICAgIF90aGlzLmluY3JfdmFsdWVzLmRlY2VkdXRpID0gcGF0aC5kZWNlZHV0aSAtIHBhdGhfYmVmb3JlLmRlY2VkdXRpOwogICAgICBfdGhpcy51cGRhdGUuZGF0ZSA9IF90aGlzLnNwbGl0X2luZm8ocGF0aC5kYXRhKVswXS5zcGxpdCgnLScpOwogICAgICBfdGhpcy51cGRhdGUudGltZSA9IF90aGlzLnNwbGl0X2luZm8ocGF0aC5kYXRhKVsxXS5zcGxpdCgnOicpOwogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzcGxpdF9pbmZvOiBmdW5jdGlvbiBzcGxpdF9pbmZvKHZhbHVlKSB7CiAgICAgIHJldHVybiB2YWx1ZS5zcGxpdCgnVCcpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["DailyCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAgBA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,eADA;AAEA,MAAA,MAAA,EAAA;AACA,QAAA,IAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAFA;AAMA,MAAA,WAAA,EAAA;AACA,QAAA,OAAA,EAAA,IADA;AAEA,QAAA,OAAA,EAAA,IAFA;AAGA,QAAA,QAAA,EAAA;AAHA;AANA,KAAA;AAYA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AAAA;;AACA,IAAA,KAAA,CACA,GADA,CACA,8GADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,UAAA,WAAA,GAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AAEA,MAAA,KAAA,CAAA,WAAA,CAAA,OAAA,GAAA,IAAA,CAAA,cAAA;AACA,MAAA,KAAA,CAAA,WAAA,CAAA,OAAA,GAAA,IAAA,CAAA,eAAA,GAAA,WAAA,CAAA,eAAA;AACA,MAAA,KAAA,CAAA,WAAA,CAAA,QAAA,GAAA,IAAA,CAAA,QAAA,GAAA,WAAA,CAAA,QAAA;AAEA,MAAA,KAAA,CAAA,MAAA,CAAA,IAAA,GAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,EAAA,KAAA,CAAA,GAAA,CAAA;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,IAAA,GAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,EAAA,KAAA,CAAA,GAAA,CAAA;AACA,KAZA;AAaA,GA9BA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,oBAAA,KAAA,EAAA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA;AAHA;AA/BA,CAAA","sourcesContent":["<template>\n  <div id=\"daily-card\">\n    <h3 class=\"title\"> {{ title }}: {{ update.date[2] | formatDate }} alle {{ update.time[0] }}:{{ update.time[1] }} </h3>\n\n    <template v-for=\"(value, title) in incr_values\">\n      <div class=\"mini-card\" :key=\"value\">\n        <h2 class=\"mini-card-value\" v-bind:class=\"title\"> +{{ value | formatNumber }} </h2>\n        <h4 class=\"mini-card-title\" v-bind:class=\"title\"> {{ title }} </h4>\n      </div>\n    </template>\n\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'DailyCard',\n  data() {\n    return {\n      title: 'Aggiornamento',\n      update: {\n        date: [],\n        time: []\n      },\n      incr_values: {\n        infetti: null,\n        guariti: null,\n        deceduti: null\n      }\n    }\n  },\n  mounted() {\n    axios\n      .get('https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale.json')\n      .then(response => {\n        var path = response.data[(response.data.length)-1]\n        var path_before = response.data[(response.data.length)-2]\n\n        this.incr_values.infetti = path.nuovi_positivi\n        this.incr_values.guariti = path.dimessi_guariti - path_before.dimessi_guariti\n        this.incr_values.deceduti = path.deceduti - path_before.deceduti\n\n        this.update.date = this.split_info(path.data)[0].split('-');\n        this.update.time = this.split_info(path.data)[1].split(':');\n      })\n  },\n  methods: {\n    split_info: function(value) {\n      return value.split('T');\n    }\n  }\n}\n\n</script>\n\n\n<style scoped>\n#daily-card {\n  background-color: rgb(42, 42, 42);\n  width: 90%;\n  height: max-content;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  box-shadow: 0px 10px 20px 0px rgba(0,0,0,0.2);\n  border-radius: 8px;\n}\n</style>"],"sourceRoot":"src/components"}]}